类	
 类属性  全局使用
 类方法  类调用    cls参数
 实例属性 对象调用
 实例方法 对象调用  self参数
 静态方法 类调用  没有参数
 

魔术方法：
__init__()  __str__() 重点
__new__()  作用：开辟空间  了解
__call__() 作用：是否将对象当成函数调用  p()
__del__()  作用：没有指针引用的时候会调用，一般不需要重写  了解

方法：
普通方法    
def(self,[]):    对象.调用    方法之间的调用 self.xxx()
类方法      
@classmethod  def func(cls,[])    类.调用    对象也能调用。
静态方法    
@staticmethod  def func()         类.调用    对象也能调用。
魔术方法   
自动执行的方法

封装：私有化 __属性
@property    get()方法
@属性.setter  set()方法


如果类中不定义__init__,调用父类super class 的__init__
如果类继承父类也需要自定义__init__，就需要在__init__函数中调用父类的__init__
如何调用父类的__init__:
	super().__init__(参数)
	super(类名,对象).__init__(参数)
如果子类中有和父类重名的方法，先查找当前类，再去找父类

python支持多继承。搜索顺序：
Python2
旧式类：从左往右，深度优先
新式类：广度优先

类.__mro__查看类继承的优先级
python3:广度优先


多态：
