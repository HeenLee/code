#coding=utf-8
'''
模块是一个包含所有你定义的函数和变量的文件，其后缀名是.py。模块可以被别的程序引入，以使用该模块中的函数等功能。
这也是使用 python 标准库的方法。

__name__属性
一个模块被另一个程序第一次引入时，其主程序将运行。如果我们想在模块被引入时，模块中的某一程序块不执行，我们可以用
__name__属性来使该程序块仅在该模块自身运行时执行。
每个模块都有一个__name__属性，当其值是'__main__'时，表明该模块自身在运行，否则是被引入。

内置的函数 dir() 可以找到模块内定义的所有名称。以一个字符串列表的形式返回:

①import module_name
②import  module_name as test  别名.   每一个模块内部都有一个__name__属性,通过这个属性获取到模块的名字。
__name__属性值为__main__的模块是主模块，一个程序只会有一个主模块
主模块就是我们直接通过python执行的模块import 模块名 as t   t.__name__打印的就是该模块名
引入模块后，都是通过模块名.方法、类来调用
③from 模块名 import 函数/类/变量….    from 模块 import Person     p1 = Person()      函数名()
④from 模块名 import *
⑤from 模块名 import 变量 as 别名
添加了_的变量，只能在模块内部访问，在通过import * 引入时，不会引入_开头的变量
编写测试代码，这部分代码，只有当前文件作为主模块的时候，才需要执行。
当模块被其他模块引入时，不需要执行的，此时需要检查当前模块是否是主模块。

'''
def print_func(m):
    print("hello:",m)


#下面代码只在自身程序执行，被其他的import不会执行，见module_import.py
if __name__ ==  "__main__":
    print("hehe")
    print(123)
else:
    print("其他的")
