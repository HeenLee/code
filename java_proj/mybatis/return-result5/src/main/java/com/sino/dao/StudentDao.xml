<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTA Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sino.dao.StudentDao">

    <select id="selectStudentById" parameterType="java.lang.Integer" resultType="com.sino.domain.Student">
        select id ,name ,email, age from student where id = #{studentId}
    </select>

    <!--多个参数使用@Param命名-->
    <select id="selectMultiParam" resultType="com.sino.domain.Student">
        select id , name ,email ,age from student where name = #{myname} or age = #{myage}
    </select>


    <select id="selectStudentReturnViewStudent" resultType="com.sino.vo.ViewStudent">  /*用了别名 别名在主配置文件配置 全限定名称也行*/
        select id , name ,email ,age from student where id = #{sid}
    </select>
    
    <!--sql执行后返回一行一列-->
    <select id="countStudent" resultType="int">
        select count(*) from student
    </select>

    <!--返回Map
        1.列名是map的key，列值是map的value
        2.返回Map最多返回一行记录。多余一行是错误

    -->
    <select id="selectMapById" resultType="java.util.Map" >
        select id,name from student where id = #{stuid}
    </select>


    <!--使用resultMap
        1.先定义resultMap
        2.在select标签中，使用resultMap来引用1定义的
     -->

    <!--定义resultMap
        id:自定义名称，表示你定义的这个resultMap
        type:java类型的全限定名称
    -->
    <resultMap id="studentMap" type="com.sino.domain.Student">
        <!--列名和java属性的关系-->
        <!--注解列，使用id标签
            column:列名
            property:java类型的属性名
        -->
        <id column="id" property="id" />
        <!--非主键列，使用result-->
        <result column="name" property="name" />
        <result column="email" property="email" />
        <result column="age" property="age" />
    </resultMap>


    <select id="selectAllStudent" resultMap="studentMap">
        select id,name,email,age from student
    </select>


    <resultMap id="mystudentMap" type="com.sino.domain.MyStudent">
        <!--列名和java属性的关系-->
        <!--注解列，使用id标签
            column:列名
            property:java类型的属性名
        -->
        <id column="id" property="stuid" />
        <!--非主键列，使用result-->
        <result column="name" property="stuname" />
        <result column="email" property="stuemail" />
        <result column="age" property="stuage" />
    </resultMap>

    <!--列名和属性名不一样：第一种方式，使用resultMap-->
    <select id="selectMyStudent" resultMap="mystudentMap">
        select id,name,email,age from student
    </select>


    <!--列名和属性名不一样:第二种方式
        resultType的默认原则是：同名的列赋值给同名属性，使用列别名(java对象的属性名)
    -->
    <select id="selectDiffColProperty" resultType="com.sino.domain.MyStudent">
         select id as stuid,name as stuname,email as stuemail,age as stuage from student
    </select>
    
    <!--第一种like java代码指定like的内容-->
    <select id="selectLikeOne" resultType="com.sino.domain.Student">
        select id,name,email,age from student where name like #{name}
    </select>

    <!--第二种方式：在mapper文件中拼接 like的内容-->
    <select id="selectLikeTwo" resultType="com.sino.domain.Student">
        select id,name,email,age from student where name like "%" #{name} "%"
    </select>
</mapper>
