SSM整合开发
SSM： SpringMVC + Spring + MyBatis
SpringMVC ：视图层，界面层。负责接收请求，显示处理结果的   dipatcherServlet中央调度器配置。xml
Spring：业务层，管理Service ,Dao，工具类对象的    applicationContext.xml
Mybatis：持久层，访问数据库的.   需要实体类，mapper.xml

用户发起请求--SpringMVC接收请求--调用Spring中的Service对象处理逻辑--Mybatis处理数据
SSM整合也叫作SSI(IBatis也就是mybatis前身)，整合中有容器
1.第一个容器SpringMVC容器，管理Controller控制器对象的
2.第二个容器Spring容器，管理Service,Dao，工具类对象的
我们要做的是把使用的对象交给合适的容器创建，管理。把Controller还有web开发的相关对象
交给SpringMVC容器，这些web用的对象写在SpringMVC配置文件中

Service,Dao对象定义在Spring的配置文件中，让Spring管理这些对象

springmvc容器和spring容器时有关系的，关系已经确定好了。
springmvc容器是spring容器的子容器，类似java中的继承。子可以访问父的内容
在子容器中的Controller可以访问父容器的Service对象，就可以实现controller使用service对象
实现步骤：
0.使用springdbd的mysql库，表使用student
1.新建maven web项目
2.加入依赖
    springmvc,spring,mybatis三个框架的依赖，jackson依赖，
    mysql驱动 druid连接池，jsp,servlet依赖
3.写web.xml
  1)注册dispatcherServlet 目的：1.创建springmvc容器对象，才能创建Controller类对象
                               2.创建的是Servlet，才能接收用户的请求
  2)注册spring的监听器：ContextLoaderListen，目的:创建spring的容器对象，才能创建service，dao等对象
  3)注册字符集过滤器，解决post请求乱码的问题
4.创建包，Controller包，service，dao,实体类包名创建好
5.写springmvc，spring，mybatis的配置文件
  1）springmvc配置文件
  2）spring配置文件
  3）mybatis配置文件
  4）数据库的属性配置文件
6.写代码，dao接口和mapper文件，service和实现类，controller，实体类
7.写jsp页面


idex.jsp -- addStudent.jsp --- student/addStudent.do(service的方法，调用dao方法) --result.jsp

