<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--声明School对象-->
    <!--
        引用类型的自动注入
        spring框架根据某些规则可言给引用类型赋值。不用你给引用类型赋值。比如Student类下面的School
        1.byName(按名称注入) java类中引用类型的属性名和spring容器中(配置文件) <bean>的id名称一样，且
                            数据类型是一致的，这样的容器中的bean，spring能够赋值给引用类型
            语法：
            <bean id="x" class="y" autowire="byName">
                简单类型赋值
            </bean>
        2.byType(按类型注入)java类中引用类型的数据类型和spring容器中（配置文件）<bean>的class属性是
            同源关系的，这样的bean能够赋值给引用类型
            同源：就是一类的意思。
                 1.java类中引用类型的数据类型和bean的class的值是一样的。
                 2.java类中引用类型的数据类型和bean的class的值父子类关系的
                 3.java类中引用类型的数据类型和bean的class的值接口和实现类关系的
            语法：
            <bean id="x" class="y" autowire="byType">
                简单类型赋值
            </bean>

    -->
    <!--声明School对象-->
    <bean id="school" class="com.sino.service.ba04.School">
        <property name="address" value="清华大学" />
        <property name="name" value="北京海淀区" />
    </bean>

    <!--使用name属性实现set注入-->  <!--byName-->
    <bean id="myStudent" class="com.sino.service.ba04.Student" autowire="byName">  <!--这里自动注入。Student类中的school成员名称和上面School的ID名称需要一样。-->
        <!--<property name="school" ref="myschool"/>-->
        <property name="name" value="张三" />
        <property name="age" value="12" />
    </bean>

</beans>